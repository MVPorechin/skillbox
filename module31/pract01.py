import re
from typing import List

# Задача 1. Скороговорка
# Дан текст вот такой английской скороговорки:
#
# How much wood would a woodchuck chuck if a woodchuck could chuck wood?
# С помощью модуля re реализуйте программу, которая выполняет следующие действия по порядку:
#
# Определить, начинается ли текст с шаблона wo. Найти первое упоминание шаблона wo в тексте. Определить содержимое
# найденной по шаблону подстроки из пункта 2. Найти позицию, с которого начинается первое упоминание шаблона wo.
# Найти позицию, на которой заканчивается первое упоминание шаблона wo. Получить список из каждого упоминания шаблона
# wo в тексте. Заменить в тексте все совпадения по шаблону wo на слово «ЗАМЕНА». По каждому действию вывести
# соответствующий результат. Не используйте методы строк. Не забывайте использовать приписку r в шаблонах.

text = ('How much wood would a woodchuck chuck if a woodchuck could chuck wood?')

rst_1 = re.match(r'wo', text)
print(f'Поиск шаблона в начале строки: {rst_1}')
rst_2 = re.search(r'wo', text)
print(f'Поиск первого найденного совпадения по шаблону: {rst_2}')
print(f'Содержимое найденной подстроки: {rst_2.group()}')
print(f'Начальная позиция: {rst_2.start()}')
print(f'Конечная позиция: {rst_2.end()}')
rst_3 = re.findall('wo', text)
print(f'Список всех упоминаний шаблона: {rst_3}')
rst_4 = re.sub('wo', 'ЗАМЕНА', text)
print(f'Текст после замены: {rst_4}')

# Задача 2. Экранирование спецсимволов
# В уроке при написании шаблона мы брали только обычные строки, без всяких
# специальных знаков. Часть из этих спецсимволов является неотъемлемой частью регулярных выражений (о чём мы
# поговорим уже в следующем уроке), они даже выделяются своими цветами при написании паттернов. Например:

text_changed = "How much \wwood+?, would a \wwood+?chuck \dwwood+, chuck if a \wwood+?,chuck could chuck \wwood?,"

exm = re.findall(pattern=r"\\wwood\+\?,", string=text_changed)
print(f'Список всех упоминаний шаблона: {exm}')
