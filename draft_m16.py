# print('m16.1 - Задача 1. Зоопарк')
# # В маленьком зоопарке каждое животное сидит в отдельной клетке, всего этих животных четверо: лев, кенгуру, слон и обезьяна. В базе данных они хранятся в виде вот такого списка:
# zoo = ['lion', 'kangaroo', 'elephant', 'monkey']
# # Сегодня в зоопарк завезли медведя (bear) и посадили его между львом и кенгуру. В итоге животных стало пять. А через неделю слона перевезли в другое место и в списке снова стало четверо животных.
# # Реализуйте эти действия в коде программы и выведите в консоль итоговый список животных, а также покажите, в какой клетке сидят лев и обезьяна. Для этого используйте методы списков.
# zoo.insert(1, 'bear')
# zoo.remove('elephant')
# print(f'Зоопарк: {zoo}')
# print(f'Лев сидит в клетке номер: {zoo.index("lion") + 1}')
# print(f'Обезьяна сидит в клетке номер: {zoo.index("monkey") + 1}')

# print('m16.1 - Задача 2. Сокращения')
# # В одной компании наступили «тёмные времена», и сотрудников стали сокращать. Зарплаты сотрудников хранятся в списке из N этих самых зарплат. Зарплаты уже уволенных сотрудников обозначаются в списке числом 0.
# # Напишите программу, которая запрашивает у пользователя количество сотрудников и их зарплаты, затем удаляет все элементы списка со значением 0 и выводит в консоль, сколько сотрудников осталось, а также их зарплаты. Дополнительный список использовать нельзя.
#Дополнительно: выведите на экран максимальную и минимальную зарплату оставшихся сотрудников. Для этого используйте функции max и min. Да, те самые, которыми нельзя называть переменные. В скобках функций просто укажите список.
# count_personal = int(input('Введите кол-во сотрудников: '))
# salary_list = []
# personal = 0
# for _ in range(count_personal):
#     salary = int(input(f'Зарплата {_ + 1} сотрудника: '))
#     if salary != 0:
#         salary_list.append(salary)
#         personal += 1
# print(f'\nОсталось сотрудников: {personal}')
# print(f'Зарплаты: {salary_list}')
# print(f'Максимальная зп: {max(salary_list)}')
# print(f'Минимальная зп: {min(salary_list)}')

# print('m16.1 - Задача 3. Кино')
# Мы поддерживаем свой киносайт и хотим сделать так, чтобы пользователи после регистрации могли создать собственный рейтинг фильмов из тех, которые есть на сайте. Вот сам список фильмов (конечно же, можете брать свои):
# Напишите программу, которая позволяет добавлять в свой рейтинг фильмы, удалять их оттуда, а также вставлять на нужное пользователю место. Обеспечьте контроль ввода и сделайте так, чтобы в список нельзя было добавить один и тот же фильм несколько раз.
# films = [
#     'Крепкий орешек', 'Назад в будущее', 'Таксист',
#     'Леон', 'Богемская рапсодия', 'Город грехов',
#     'Мементо', 'Отступники', 'Деревня',
#     'Проклятый остров', 'Начало', 'Матрица'
# ]
#
# n = int(input("Сколько фильмов выбрать? "))
# your_films = []
# for i in range(n):
#     print("Ваш текущий топ фильмов:", your_films)
#     film_name = input("Имя фильма: ")
#     print("Команды: добавить, вставить, удалить")
#     command = input("Введите команду: ")
#     if film_name not in your_films:
#         if command == "добавить":
#             your_films.append(film_name)
#         elif command == "вставить":
#             insert_index = int(input("Введите индекс для вставки "))
#             insert_index %= len(your_films)  # ограничим индекс списка, чтобы он не вылезал за границу списка
#             your_films.insert(insert_index, film_name)
#     else:
#         if command == "удалить":
#             your_films.remove(film_name)
#
# print("Ваш текущий топ фильмов:", your_films)

# print('m16.2 - Задача 1. Задачи компаний')
# Одна IT-компания решила расшириться и взяла под своё крыло ещё три таких же, но поменьше.
# Конечно же, все выполненные и невыполненные задачи этих компаний перетекли в основную компанию.
# Даны четыре списка компаний, в которых для каждой задачи написано, выполнена (1) она или нет (0):
#
# main_list = [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1]
# first_company = [0, 0, 0]
# second_company = [1, 0, 0, 1, 1]
# third_company = [1, 1, 1, 0, 1]
# # Напишите программу, которая расширяет список main элементами остальных списков, выведите итоговый список, а также выведите количество невыполненных задач.
# # Результат работы программы:
# # Общий список задач: [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1]
# # Кол - во невыполненных задач: 10
#
# main_list.extend(first_company)
# main_list.extend(second_company)
# main_list.extend(third_company)
# print(f'Общий список задач: {main_list}')
# print(f'Кол - во невыполненных задач: {main_list.count(0)}')

# print('m16.2 - Задача 2. Вредоносное ПО')
# Гера решил попрактиковаться в программировании и захотел написать небольшой скрипт,
# который после двух сообщений отправляет ещё одно на основе первых двух.
# Пользователь вводит две строки. В каждой из них есть какое-то количество специальных символов ! и ?.
# Напишите программу, которая считает количество этих символов отдельно в первой строке и отдельно во второй.
# Если в первой строке их больше, чем во второй, то на экран выводится первая строчка, объединённая со второй,
# а иначе — вторая с первой. При равном количестве символов в строках выводится «Ой».

# first_message = input('Первое сообщение: ')
# second_message = input('Второе сообщение: ')
# first_count = first_message.count('!') + first_message.count('?')
# second_count = second_message.count('!') + second_message.count('?')
# if first_count < second_count:
#     first_message, second_message = second_count, first_message
# elif first_count == second_count:
#     print('Ой')
# print(f'{first_message + second_message}')

print('m16.2 - Задача 3. Пакеты')
# При работе с сервером мы кодируем сообщение и отправляем его в виде пакетов информации. Их количество равно N.
# Допустим, каждый пакет содержит четыре числа, каждое из которых равно нулю или единице. Эти числа называются битами.
# Иногда в кодировке сообщения встречаются ошибки, и в пакете эта ошибка обозначается числом -1.
# Если таких ошибок не больше одной, то этот пакет мы целиком добавляем в список для декодирования, а иначе отбрасываем.
# Напишите программу, которая будет обрабатывать полученные пакеты и выведет на экран итоговое сообщение для декодирования,
# а также количество ошибок в нём и количество необработанных пакетов.
#
# pack = []
# decode = []
# bad_packs = 0
# packs_amt = int(input('Кол-во пакетов: '))
#
# for i_pack_num in range (packs_amt):
#     print(f'Пакет номер {i_pack_num + 1}')
#     for i_bit in range(4):
#         num = int(input(f'Бит {i_bit + 1} :'))
#         pack.append(num)
#     if pack.count(-1) <= 1:
#         decode.extend(pack)
#     else:
#         print('Много ошибок в пакете')
#         bad_packs += 1
#     pack = []
# print(f'\nПолученное сообщение: {decode}')
# print(f'Кол-во ощибок в сообщении: {decode.count(-1)}')
# print(f'Кол-во потерянных пакетов: {bad_packs}')

# number_of_msgs = int(input("Количество пакетов: "))
# result_msg = []
# lost_packages = 0
# for _ in range(number_of_msgs):
#     print(f'\nПакет номер {_ + 1}')
#     buffer = []
#     errors_in_package = 0
#     for i in range(1, 5):
#         bit = int(input(f"{i} бит: "))
#         buffer.append(bit)
#         if bit < 0:
#             errors_in_package += 1
#     if errors_in_package <= 1:
#         result_msg.extend(buffer)
#     else:
#         lost_packages += 1
#
# print("Полученное сообщение:", result_msg)
# print("Кол-во ошибок в сообщении:", result_msg.count(-1))
# print("Кол-во потерянных пакетов:", lost_packages)

# N = int(input('Кол-во участников: '))
# members = list(range(1, N + 1))
# print(members)

# N = int(input('Кол-во участников: '))
# members = []
# num = 1
# for _ in range(N // 3):
#     members.append(list(range(num, num + 3)))
#     num += 3
# print(f'\n{members}')
# print('')
# for i_team in members:
#     print(i_team)
#     print('')
# for i_team in members:
#     for i_man in i_team:
#         print(i_man, end= ' ')
#     print()
#
# вложенные списки
# words_list = [['', 0], ['', 0], ['', 0]]
#
# for i_num in range(3):
#     word = input(f'Введите {i_num + 1} слово: ')
#     words_list[i_num][0] = word
#
# text = input('Слово из текста: ')
# while text != 'end':
#     for index in range(3):
#         if words_list[index][0] == text:
#             words_list[index][1] += 1
#     text = input('Слово из текста: ')
#
# print('\n Подсчет слов в тексте:')
# for index in range(3):
#     print(f'{words_list[index]} : {words_list[index][1]}')

print('m16.3 - Задача 1. Матрица')